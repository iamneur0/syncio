name: Main Branch Release (Docker public & private)

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'  # Trigger on Release Please tags
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        instance: [ public, private ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (private)
      id: meta_private
      if: matrix.instance == 'private'
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=private
          type=semver,pattern=private-v{{version}}
        labels: |
          org.opencontainers.image.title=syncio-private

    - name: Extract metadata (public)
      id: meta_public
      if: matrix.instance == 'public'
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=public
          type=semver,pattern=public-v{{version}}
        labels: |
          org.opencontainers.image.title=syncio-public

    - name: Build and push Docker image (${{ matrix.instance }})
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta_private.outputs.tags || steps.meta_public.outputs.tags }}
        labels: ${{ steps.meta_private.outputs.labels || steps.meta_public.outputs.labels }}
        build-args: |
          INSTANCE=${{ matrix.instance }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify on success
      if: needs.build-and-push.result == 'success'
      run: |
        echo "✅ Main branch build completed successfully!"
        echo "Images pushed: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} (public/private variants)"
        
    - name: Notify on failure
      if: needs.build-and-push.result == 'failure'
      run: |
        echo "❌ Main branch build failed!"
        exit 1
