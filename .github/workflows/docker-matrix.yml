name: Docker Images (public & private) - manual

on:
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and push (${{ matrix.instance }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        instance: [ public, private ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Private tagging scheme
      - name: Extract metadata (private)
        id: meta_private
        if: matrix.instance == 'private'
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            # legacy compatibility tags
            type=raw,value=private
            type=raw,value=latest
            # versioned private tag, e.g. private-v0.0.12
            type=semver,pattern=private-v{{version}}
          labels: |
            org.opencontainers.image.title=syncio-private

      # Public tagging scheme
      - name: Extract metadata (public)
        id: meta_public
        if: matrix.instance == 'public'
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=public
            # versioned public tag, e.g. public-v0.0.12
            type=semver,pattern=public-v{{version}}
          labels: |
            org.opencontainers.image.title=syncio-public

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta_private.outputs.labels || steps.meta_public.outputs.labels }}
          tags: ${{ steps.meta_private.outputs.tags || steps.meta_public.outputs.tags }}
          build-args: |
            INSTANCE=${{ matrix.instance }}


