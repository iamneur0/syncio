generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  username        String   @unique
  email           String   @unique
  isActive        Boolean  @default(true)
  stremioAuthKey  String?  // Encrypted Stremio auth key
  stremioAddons   String?  // JSON string of Stremio addons
  excludedAddons  String?  // JSON array of addon IDs that user has excluded
  protectedAddons String?  // JSON array of addon IDs that user has protected
  colorIndex      Int?     // UI color theme index
  accountId       String?  // For multi-tenant support

  // Relationships

  @@map("users")
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  isActive    Boolean  @default(true)
  colorIndex  Int?
  accountId   String?
  userIds     String?
  addonIds    String?

  // Relationships
  addons       GroupAddon[]

  @@map("groups")
}

// GroupMember and GroupInvite removed â€“ using JSON arrays on Group

model Addon {
  id             String   @id @default(cuid())
  name           String
  description    String?
  manifestUrl    String
  manifest       Json?    // Store the full manifest JSON
  stremioAddonId String?
  version        String?
  isOfficial     Boolean  @default(false)
  isActive       Boolean  @default(true)
  accountId      String?
  iconUrl        String?

  // Relationships
  groupAddons    GroupAddon[]

  @@unique([name, accountId])
  @@map("addons")
}

model GroupAddon {
  id        String   @id @default(cuid())
  isEnabled Boolean  @default(true)
  settings  String?
  groupId   String
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  addonId   String
  addon     Addon    @relation(fields: [addonId], references: [id], onDelete: Cascade)

  @@unique([groupId, addonId])
  @@map("group_addons")
}


model AppAccount {
  id           String   @id @default(cuid())
  uuid         String   @unique
  passwordHash String

  @@map("app_accounts")
}

