version: '3.8'

services:
  syncio:
    image: ghcr.io/iamneur0/syncio:latest
    container_name: syncio
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-syncio}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-temp-jwt-secret-key}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-temp-encryption-key-32-chars-long}
    ports:
      - "3000:3000"
      #- "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stremio-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-syncio}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - ./syncio/postgres_data:/var/lib/postgresql/data
      - ./syncio/init-db:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-syncio}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: stremio-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./syncio/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5